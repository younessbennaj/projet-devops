stages:
  - 💿install
  - 🧪test
  - 🏗️build-test
  - 🏗️build
  - 🚀deploy

variables:
  PROJECT_PATH: "$CI_PROJECT_DIR"
  APP_OUTPUT_PATH: "$CI_PROJECT_DIR/dist/front"

before_script:
  - apt update
  - apt install nodejs --yes
  - nodejs -v
  - apt install npm --yes
  - npm -v
  - echo $PROJECT_PATH
  - echo $APP_OUTPUT_PATH

install_dependencies:
  stage: 💿install
  script:
    - npm install
  except:
      - tags
  cache:
    key:
      files: 
        - package.json
    paths:
      - node_modules

test_app:
  stage: 🧪test
  except:
      - tags
  script:
    - apt-get update
    - apt-get install software-properties-common --yes
    - add-apt-repository ppa:system76/pop
    - apt install chromium --yes
    - export CHROME_BIN=/usr/bin/chromium
    - ls -ail
    - npm install
    - npm run test
  cache:
    key:
      files: 
        - package.json
    paths:
      - node_modules

build_app-test:
  stage: 🏗️build-test
  except:
    - tags
  script:
    - npm run build
  artifacts:
    name: 'angular-app-pipeline'
    paths:
      - $APP_OUTPUT_PATH
    expire_in: 1 week
  cache:
    key:
      files: 
        - package.json
    paths:
      - node_modules

build_app:
  stage: 🏗️build
  rules:
   - if: $CI_COMMIT_TAG
  script:
    - npm install
    - npm run build --prod
  artifacts:
    name: 'angular-app-pipeline-$CI_COMMIT_REF_NAME'
    paths:
      - $APP_OUTPUT_PATH
    expire_in: 1 week

deploy:
  stage: 🚀deploy
  rules:
   - if: $CI_COMMIT_TAG
  before_script:
    - apt update
    - apt upgrade -y
    - apt install -y python3-pip
    - pip3 install ansible
    - "command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )"
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ls -ail
    - ansible-playbook -i ./ansible_config/hosts ./ansible_playbook/deploy.yml --vault-password-file $FILE_PASSWD


after_script:
  - echo "🤖 after script"
